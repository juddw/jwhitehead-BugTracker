@model jwhitehead_BugTracker.Models.CodeFirst.Ticket

@{
    ViewBag.Title = "Details";
}

<h2>Ticket Details</h2>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<div>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            Assigned To
            @*@Html.DisplayNameFor(model => model.AssignToUser.FirstName)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AssignToUser.FullName)
        </dd>

        <dt>
            Created By
            @*@Html.DisplayNameFor(model => model.OwnerUser.FirstName)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OwnerUser.FirstName)
        </dd>

        <dt>
            Project Name
            @*@Html.DisplayNameFor(model => model.Project.Title)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Project.Title)
        </dd>

        <dt>
            Priority
            @*@Html.DisplayNameFor(model => model.TicketPriority.Name)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketPriority.Name)
        </dd>

        <dt>
            Ticket Status
            @*@Html.DisplayNameFor(model => model.TicketStatus.Name)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketStatus.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Created)
        </dt>

        <dd>
            @*@Html.DisplayFor(model => model.Created.UtcDateTime)*@
            @Html.ToUserTime(Model.Created, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Updated)
        </dt>

        <dd>
            @if (Model.Updated != null)
            {
                @Html.ToUserTime(Model.Updated.Value, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
            }
        </dd>

        <dt>
            Ticket Type
            @*@Html.DisplayNameFor(model => model.TicketTypeId)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketType.Name)
        </dd>
    </dl>
</div>

@*ADDING ATTACHMENTS*@
@using (Html.BeginForm("CreateAttachment", "Tickets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @*Image Upload*@
    <input name="TicketId" value="@Model.Id" hidden />
    <div class="form-group">
        <label class="control-label col-md-2">Upload Image</label>
        <div class="col-md-10">
            <input name="image" type="file" class="form-control" /> @*name image should be the same as....*@
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Description</label>
        <div class="col-md-10">
            <input name="description" type="text" class="form-control" /> @*name Description should be the same as....*@
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Upload" class="btn btn-primary" style="margin-top: 10px; margin-bottom: 30px;" />
        </div>
    </div>
}


@*ADDING ATTACHMENTS*@
<h3>Attachments</h3>
@foreach (var attachment in Model.Attachments)
{
    <p>
        <span style="font-weight: 600">@attachment.Author.FullName </span>uploaded file:
        <a href="@attachment.FileUrl" target="_blank">@attachment.FileUrl</a>
        <br />
        <span style="font-weight: 600">Created Date: </span>@Html.ToUserTime(attachment.Created, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
        <br />
        <span style="font-weight: 600">Description: </span>@attachment.Description
        <br />
        @if (User.IsInRole("Admin"))
        {
            @Html.ActionLink("Edit", "Edit", "Tickets", new { id = attachment.Id }, new { @class = "editText" }) <span>|</span>
            @Html.ActionLink("Delete", "AttachmentDelete", "Tickets", new { id = attachment.Id }, new { @class = "editText" })
        }
        <br />
        <br />
    </p>
}
<hr style="border-color: #808080; margin-top: 50px;" />


@*ADDING COMMENTS*@
@using (Html.BeginForm("CreateComments", "Tickets")) // way to grab data and send to backend.
{
    @Html.AntiForgeryToken()

    <h3>Comments</h3>
    if (Request.IsAuthenticated)
    {
        <input type="number" name="TicketId" value="@Model.Id" hidden />
        <textarea rows="5" cols="100" name="Body" required></textarea> @*user must enter something.*@
        <input class="btn btn-primary" style="margin-top: 10px; margin-bottom: 40px; display: block;" type="submit" value="Submit" />
    }
    else
    {
        <p>Please log in to leave a comment.</p>
    }
}

@foreach (var comment in Model.Comments)
{
    if (comment != null && comment.AuthorId != null)
    {
        <p>
            <span style="font-weight: 600">@comment.Body</span> - @comment.Author.FullName
            <br />
            @Html.ToUserTime(comment.Created, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
        </p>

        <p style="margin: 0px 0px 0px 0px;">
            @{
                        // Permission by Roles Edit/Delete Buttons for Comments
                        if (User.IsInRole("Admin") || User.IsInRole("Project Manager") && comment.Ticket.Project.Users.Any(u => u.Id == ViewBag.UserId) || comment.AuthorId == ViewBag.UserId)
                        {
                            @Html.ActionLink("Edit", "CommentEdit", "Tickets", new { id = comment.Id }, new { @class = "editText" }) <span>|</span>
                            @Html.ActionLink("Delete", "CommentDelete", "Tickets", new { id = comment.Id }, new { @class = "editText" })
                        }
                    }

        </p>
        <br />
                    }
            }
@*TICKET HISTORY*@
<hr style="border-color: #808080; margin-top: 50px;" />

<h3>Ticket History</h3>
<br />
@foreach (var history in Model.Histories)
{
    if (history != null && history.AuthorId != null)
    {
        if (history.Property == "TICKET CREATED")
        {
            <p>
                <span style="color: #10653a; font-weight: 600">@history.Property</span> - @Html.ToUserTime(history.Created, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
                <br />
                @history.Author.FullName
            </p>
            <br />
        }

        if (history.Property == "NEW TICKET ATTACHMENT")
        {
            <p>
                <span style="color: #635645; font-weight: 600">@history.Property</span> - @Html.ToUserTime(history.Created, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
                <br />
                @history.Author.FullName
            </p>
            <p>
                <a href="/Uploads" + @history.NewValue target="_blank">@history.NewValue</a>
            </p>
            <br />
        }

        if (history.Property == "NEW TICKET COMMENT")
        {
            <p>
                <span style="color: #334959; font-weight: 600">@history.Property</span> - @Html.ToUserTime(history.Created, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
                <br />
                @history.Author.FullName added this comment:
            </p>
            <p>
                <span style="color: #334959;">&#34;@history.NewValue&#34;</span>
            </p>
            <br />
        }

        if (history.Property == "COMMENT DELETED")
        {
            <p>
                <span style="color: brown; font-weight: 600">@history.Property</span> - @Html.ToUserTime(history.Created, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
                <br />
                @history.Author.FullName deleted this comment:
            </p>
            <p>
                <span>&#34;@history.NewValue&#34;</span>
            </p>
            <br />
        }

        if (history.Property == "ATTACHMENT DELETED")
        {
            <p>
                <span style="color: brown; font-weight: 600">@history.Property</span> - @Html.ToUserTime(history.Created, ViewBag.UserTimeZone as string, "MM/dd/yyyy, h:mm:ss tt")
                <br />
                @history.Author.FullName deleted this attachment:
            </p>
            <p>
                <span>&#34;@history.NewValue&#34;</span>
            </p>
            <br />
        }
    }
}